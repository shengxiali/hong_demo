(function (window, $, baidu) {    /**     * 使用百度模板进行渲染     * @param temp_id 模板ID     * @param data 数据     * @returns jQuery     */    $.fn.baidu_render = function (temp_id, data) {        var bt = baidu.template, html = bt(temp_id, data);        return this.each(function () {            $(this).html(html);        });    };    /**     * 加载数据更新当前dom     * @param data_url 数据地址     * @param param 数据请求参数     * @param temp_id 模板ID     * @param clear 加载数据前是否清空原来的dom     * @param fn_success 数据加载成功回调     * @param fn_error 数据加载错误的回调     * @param fn_complete 数据加载完成的回调     * @returns {$.fn}     */    $.fn.load_data_render = function (data_url, param, temp_id, clear, fn_success, fn_error, fn_complete) {        var my_this = this;        if (clear) {            this.html('');        }        $.showLoading();        $.ajax({            type: 'POST',            url: data_url,            data: param,            dataType: 'json',            success: function (result) {                if (result && result['ret'] == 0 && result['data']) {//数据正常                    var bt = baidu.template, html = bt(temp_id, result['data']);                    //渲染                    my_this.each(function () {                        $(this).html(html);                    });                    if (typeof fn_success == 'function') {                        fn_success.call(this, result);                    }                } else {//返回了错误的数据                    if (typeof fn_error == 'function') {                        fn_error.call(this, result);                    }                    console.error('数据加载成功，但是格式不对', result);                    //显示错误提示                    $.gritter.add({                        title: '发生了系统错误',                        text: result['msg'] + ',错误代码:' + result['ret'],                        sticky: false,                        class_name: 'gritter-light'                    });                }                $.hideLoading();            },            error: function (err) {                if (typeof fn_error == 'function') {                    fn_error.call(this, err);                }                $.hideLoading();                console.log(err);                //显示错误提示                $.gritter.add({                    title: '发生了网络错误',                    text: 'XMLHttpRequest的错误代码:' + err.status                });            },            complete: function () {                if (typeof fn_complete == 'function') {                    fn_complete.call(this);                }                //不能在这里调用$.hideLoading();因为如果成功的话，渲染DOM也需要时间            }        });        return this;    };    /**     * POST提交数据     * @param data_url     * @param param     * @param fn_success     * @param fn_error     * @param fn_complete     */    $.post_data = function (data_url, param, fn_success, fn_error, fn_complete) {        $.showLoading();        $.ajax({            type: 'POST',            url: data_url,            data: param,            dataType: 'json',            success: function (result) {                if (typeof fn_success == 'function') {                    fn_success.call(this, result);                }            },            error: function (err) {                if (typeof fn_error == 'function') {                    fn_error.call(this, err);                }                console.error(err);                //显示错误提示                $.gritter.add({                    title: '发生了网络错误',                    text: 'XMLHttpRequest的错误代码:' + err.status                });            },            complete: function () {                if (typeof fn_complete == 'function') {                    fn_complete.call(this);                }                $.hideLoading();            }        });    };    var $loader = null, $main_content = null;    $.showLoading = function (is_mask) {        if (!$loader) {            $loader = $('.weiba-page-loading');            if (is_mask) {//全屏                $loader.addClass('masklayer');            }        }        if (!$main_content) {            $main_content = $('.main-content');        }        $loader.show();    };    $.hideLoading = function () {        if (!$loader) {            $loader = $('.weiba-page-loading');        }        $loader.fadeOut();    };})(window, jQuery, baidu);(function(window,Weiba,$){    if(Weiba==undefined){        window.Weiba = Weiba = {};    }    /**     * 显示提示     */    var $tip, tmrTimer;    /**     * 显示非模式信息窗     * @param msg 提示内同     * @param delay 显示时间（默认1.5秒）     */    Weiba.tip = function (msg, delay) {        if (!delay) {            delay = 1500;        }        if (!$tip) {            $tip = $('<div class="weiba-tip"></div>').appendTo('body');        }        $tip.html(msg).fadeIn();        window.clearTimeout(tmrTimer);        tmrTimer = window.setTimeout(function () {            $tip.fadeOut();        }, delay);    };    /**     * 显示警告对话框     * @param title 标题     * @param msg 信息     * @param fn_ok 确定后执行的方法     */    Weiba.alert = function(title,msg,fn_ok,custom_class){        if(custom_class==undefined){            custom_class = '';        }        var html = '<div class="weiba-dialog '+ custom_class +'">'            + '<div class="weiba-dialog-body">'            + '<div class="weiba-dialog-title">' + title + '</div>'            + '<div class="weiba-dialog-content">' + msg + '</div>'            + '<div class="weiba-dialog-line"></div>'            + '<div class="weiba-dialog-button weiba-dialog-button-ok">确定</div>'            + '</div>'            + '</div>';        var $dialog = $(html).appendTo('body').on('tap', '.weiba-dialog-button', function () {            $dialog.remove();            var $this = $(this);            if ($this.hasClass('weiba-dialog-button-ok') && (typeof fn_ok == 'function')) {                fn_ok.call(this);            }        });    };    /**     * 显示确认对话框     * @param title 标题     * @param msg 信息     * @param fn_ok 确定后执行的方法     * @param fn_cancel 取消后执行的方法     */    Weiba.confirm = function(title, msg, fn_ok, fn_cancel,custom_class){        if(custom_class==undefined){            custom_class = '';        }        var html = '<div class="weiba-dialog '+ custom_class +'">'            + '<div class="weiba-dialog-body">'            + '<div class="weiba-dialog-title">' + title + '</div>'            + '<div class="weiba-dialog-content">' + msg + '</div>'            + '<div class="weiba-dialog-line"></div>'            + '<div class="weiba-dialog-button weiba-dialog-button-ok">是</div>'            + '<div class="weiba-dialog-button weiba-dialog-button-cancel">否</div>'            + '</div>'            + '</div>';        var $dialog = $(html).appendTo('body').on('tap', '.weiba-dialog-button', function () {            $dialog.remove();            var $this = $(this);            if ($this.hasClass('weiba-dialog-button-ok') && (typeof fn_ok == 'function')) {                fn_ok.call(this);            } else if ($this.hasClass('weiba-dialog-button-cancel') && (typeof fn_cancel == 'function')) {                fn_cancel.call(this);            }        });    };    var _createPromptHtml  = {        'text' : function(item){            var html = '<div><input class="text weiba-dialog-input" type="text" ';            html += (item['name']?(' name="' + item['name'] + '" weiba-data-prompt-key="'+ item['name'] +'" '):'');            html += (item['maxlength']?(' maxlength="'+ item['maxlength'] +'" '):'');            html += (item['placeholder']?(' placeholder="'+ item['placeholder'] +'" '):'');            html += (item['value']?(' value="'+ item['value'] +'" '):'');            html += '></div>';            return html;        },        'tel' : function(item){            var html = '<div><input class="text weiba-dialog-input" type="tel" ';            html += (item['name']?(' name="' + item['name'] + '" weiba-data-prompt-key="'+ item['name'] +'" '):'');            html += (item['maxlength']?(' maxlength="'+ item['maxlength'] +'" '):'');            html += (item['placeholder']?(' placeholder="'+ item['placeholder'] +'" '):'');            html += (item['value']?(' value="'+ item['value'] +'" '):'');            html += '></div>';            return html;        }    };    /**     * 显示输入对话框     * @param title 标题     * @param msg 信息     * @param items 输入项json格式数组     * {     *      name ： '', //字段名称     *      placeholder ： '', //标签     *      type : text|tel 类型     *      text_max: 5 文本最大长度     *      tel_max : 13 电话最大长度     * }     *     * @param fn_ok 确定后执行的方法     * @param fn_cancel 取消后执行的方法     */    Weiba.prompt = function(title,msg,items, fn_ok, fn_cancel,custom_class){        if(custom_class==undefined){            custom_class = '';        }        var inputs = '';        for(var i =0 ;i<items.length;i++){            inputs += _createPromptHtml[items[i]['type']](items[i])        }        var html = '<div class="weiba-dialog '+ custom_class +'">'            + '<div class="weiba-dialog-body">'            + '<div class="weiba-dialog-title">'+title+'</div>'            + '<div class="weiba-dialog-msg">'+msg+'</div>'            + '<div class="weiba-dialog-content">'+inputs+'</div>'            + '<div class="weiba-dialog-line"></div>'            + '<div class="weiba-dialog-button weiba-dialog-button-ok">确定</div>'            + '<div class="weiba-dialog-button weiba-dialog-button-cancel">取消</div>'            + '</div>'            + '</div>';        var $confirm = $(html).appendTo('body').on('tap', '.weiba-dialog-button', function () {            var $this = $(this);            if ($this.hasClass('weiba-dialog-button-ok') && (typeof fn_ok == 'function')) {                var data = {};                $('.weiba-dialog-input',$confirm).each(function(index,item){                    var $item = $(item),key=$item.attr('weiba-data-prompt-key');                    if(key) {                        data[key] = $item.val();                    }                });                var result = fn_ok.call(this,data);                if(result!==false){//没有阻止，则先删除                    $confirm.remove();                }            } else if($this.hasClass('weiba-dialog-button-cancel')) {                $confirm.remove();                if(typeof fn_cancel == 'function') {                    fn_cancel.call(this);                }            }        });    };    if ( typeof define === "function" && define.amd ) {        define(function() {            return Weiba;        });    }})(window, window.Weiba ,window.jQuery || window.Zepto);/*全选 */$('table th input:checkbox').on('click', function () {    var that = this;    $(this).closest('table').find('tr > td:first-child input:checkbox')        .each(function () {            this.checked = that.checked;            $(this).closest('tr').toggleClass('selected');        });});function ajax_call(the_url, the_param) {    $.ajax({        type: 'POST',        url: the_url,        data: the_param,        success: function (html) {            alert(html);        },        error: function (html) {            alert("提交数据失败，代码:" + html.status + "，请稍候再试");        }    });}function ajax_call_and_refresh(the_url, the_param) {    $.ajax({        type: 'POST',        url: the_url,        data: the_param,        success: function (html) {            location.reload();        },        error: function (html) {            alert("提交数据失败，代码:" + html.status + "，请稍候再试");        }    });}/** * 使用ajax提交数据 */function ajax_post(the_url, the_param, succ_callback) {    $.ajax({        type: 'POST',        dataType: 'json',        cache: false,        url: the_url,        data: the_param,        success: succ_callback,        error: function (html) {            alert("提交数据失败，代码:" + html.status + "，请稍候再试");        }    });}/** * 使用ajax获取数据 */function ajax_get(the_url, error_tip, succ_callback) {    $.ajax({        type: 'GET',        cache: true,        url: the_url,        dataType: 'json',        success: succ_callback,        error: function (html) {            if (error_tip)                alert("获取数据失败，代码:" + html.status + "，请稍候再试");        }    });}//提示框 /* @param data_json json数据 @param reload 是否重载页面 @param timeout 页面跳转/刷新时间 */var last_gritter;function alert_box(data_json, reload, timeout) {    var json_msg = data_json.message,        json_status = data_json.status,        json_redirect = data_json.redirect_url != '' && data_json.redirect_url != undefined ? data_json.redirect_url : '';    if (typeof(data_json) != "object") {        json_msg = data_json;    }    //没有返回message,但是状态是成功的,提示成功    if (json_msg == "" && json_status == 'success') {        json_msg = '操作成功';    }    if (last_gritter) $.gritter.remove(last_gritter);    last_gritter = $.gritter.add({        title: '提示!!',        text: json_msg ? json_msg : '操作失败',        class_name: 'gritter-item-wrapper gritter-' + (json_status == 'success' ? 'success' : 'error') + ' gritter-center hover'    });    if (json_redirect != '') {        setTimeout(function () {            window.location.href = json_redirect;        }, timeout ? timeout : 3000);    } else if (reload == "1") {        setTimeout(function () {            location.reload();        }, timeout ? timeout : 3000);    }}/*bootbox设置全局语言*/bootbox.setDefaults({'locale': "zh_CN"});